<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of Teacher * * @author phong */class Teacher extends MY_Controller {    //put your code here    public function __construct() {        parent::__construct();    }    function index($offset = 0) {        $get = $this->input->get();        $teacher_id = $this->session->userdata['user_id'];        $teacher_infor = $this->_get_all_require_data($teacher_id, '');        $vat = explode(";", $teacher_infor['staffs'][0]['vat']);        $cod = $teacher_infor['staffs'][0]['cod'];        $profit = explode(";", $teacher_infor['staffs'][0]['profit']);                        $teacher_course = $this->get_teacher_combo_and_course($teacher_id);        $list_course_code_only = array();        foreach ($teacher_course as $value){            $list_course_code_only[] = $value['course_code'];        }        //        echo '<pre>';//                print_r($list_course_code_only);die;                $data['courses'] = $teacher_course;        if (isset($get['l8_c3'])) {            echo 'đã thu lakita';        } else {            echo 'đã đăng ký';        }        // die;        if (isset($get['l8_c3'])) {            $conditional['where'] = array(                'cod_status_id' => _DA_THU_LAKITA_, 'is_hide' => '0');        } else {            $conditional['where'] = array(                'is_hide' => '0');        }        if (!isset($get['filter_course_code'])) {            $conditional['where_in'] = array('course_code' => $list_course_code_only);        }        $conditional['order'] = array('date_rgt' => 'DESC');        $data_pagination = $this->_query_all_from_get($get, $conditional, $this->per_page, $offset);        $data['pagination'] = $this->_create_pagination_link($data_pagination['total_row']);        $data['contacts'] = $data_pagination['data'];        foreach ($data['contacts'] as $key => $value){            $data['contacts'][$key]['profit'] = round(($value['price_purchase'] - $value['price_purchase'] * 12 / 100 - $value['price_purchase'] * $vat[0] / 100) * $profit[0] / 100)*$teacher_course[$value['course_code']]['percent'];        }                $data['total_contact'] = $data_pagination['total_row'];        $data['left_col'] = array('course_code', 'l8_c3_switch');        $data['right_col'] = array('date_rgt');        //  $data['right_col'] = array('date_confirm');        $this->table .= 'sale provider date_confirm date_expect_receive_cod note_cod action';        $data['table'] = array('contact_id', 'name', 'phone', 'course_code', 'price_purchase', 'profit', 'date_rgt'); //array('selection', 'contact_id');        /*         * Các file js cần load         */        $data['load_js'] = array('common_real_filter_contact');        $data['titleListContact'] = 'Danh sách contact đã đăng ký';        $data['actionForm'] = '';        $data['content'] = 'common/list_contact';        $this->load->view(_MAIN_LAYOUT_, $data);    }    private function _get_all_require_data($id = '', $course = '') {        if ($id != '') {            $require_model = array(                'staffs' => array(                    'where' => array(                        'id' => $id,                        'role_id' => 8,                        'active' => 1                    )                ),            );        }        if ($course != '') {            $require_model = array(                'courses' => array(                    'where_in' => array(                        'course_code' => $course),                    'where' => array(                        'active' => 1                    )                ),            );        }        return array_merge($this->data, $this->_get_require_data($require_model));    }    function view_report() {        $this->load->helper('manager_helper');        $get = $this->input->get();        $query = $this->_get_query_condition_arr($get);//                echo '<pre>';//        print_r($get);die;        $teacher_id = $this->session->userdata['user_id'];        $teacher_infor = $this->_get_all_require_data($teacher_id, '');        $vat = explode(";", $teacher_infor['staffs'][0]['vat']);        $cod = $teacher_infor['staffs'][0]['cod'];        $profit = explode(";", $teacher_infor['staffs'][0]['profit']);        $teacher_course = $this->get_teacher_combo_and_course($teacher_id);        $list_course_code_only = array();        foreach ($teacher_course as $value){            $list_course_code_only[] = $value['course_code'];        }        //        echo '<pre>';//                print_r($list_course_code_only);die;                $data['courses'] = $teacher_course;        /* Mảng chứa các level cần lấy, và ngày phát sinh tương ứng */        $typeReport = array(            'Đăng ký (C3)' => 'date_rgt',            'Đã lọc trùng(L1)' => 'date_handover',            'Đồng ý mua (L6)' => 'date_confirm',            'Hủy đơn' => 'date_receive_cancel_cod',            'Đã thu cod (L7)' => 'date_receive_cod',            'Đã thu Lakita (L8)' => 'date_receive_lakita',        );        /* Mảng chứa các ngày lẻ */        if (isset($get['filter_date_happen_from']) && $get['filter_date_happen_from'] != '' && isset($get['filter_date_happen_end']) && $get['filter_date_happen_end'] != '') {            $startDate = strtotime($get['filter_date_happen_from']);            $endDate = strtotime($get['filter_date_happen_end']);            $dateArray = h_get_time_range($startDate, $endDate);        }//        echo '<pre>';//        print_r($dateArray);die;        // <editor-fold defaultstate="collapsed" desc="LỌC THEO TỪNG NGÀY LẺ">        if (isset($get['filter_date_happen_from']) && $get['filter_date_happen_from'] != '' && isset($get['filter_date_happen_end']) && $get['filter_date_happen_end'] != '') {            $Report = array();            foreach ($typeReport as $level => $typeDate) {                $total = 0;                foreach ($dateArray as $dayName => $date) {                    $revenue = 0;                    $count = 0;                    $input = array();                    $input['select'] = 'id, price_purchase, source_sale_id, course_code';                    if ($level == 'Đã lọc trùng(L1)') {                        $input['where'] = array(                            '(`ordering_status_id` = 1 OR `ordering_status_id` = ' . _CHAM_SOC_SAU_MOT_THOI_GIAN_ .                            ' OR `ordering_status_id` = ' . _TU_CHOI_MUA_ . ''                            . ' OR `ordering_status_id` = ' . _DONG_Y_MUA_ . ')' => 'NO-VALUE');                    }                    if ($level == 'L1.1') {                        $input['where']['ordering_status_id'] = _SAI_SO_;                    }                    $input['where'][$typeDate . '>='] = $date;                    $input['where'][$typeDate . '<='] = $date + 24 * 3600 - 1;                    $input['where']['is_hide'] = '0';                    if (isset($get['filter_course_code']) && $get['filter_course_code'] != '') {                        $input['where_in'] = array('course_code' => $get['filter_course_code']);                    } else {                        $input['where_in'] = array('course_code' => $list_course_code_only);                    }                    $input = array_merge_recursive($input, $query['input_get']);                    $L8 = $this->contacts_model->load_all($input);                    if ($cod == 1) {                        foreach ($L8 as $value1) {                            switch ($value1['source_sale_id']) {                                case 1:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 2:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 3:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                            }                        }                    } else {                        foreach ($L8 as $value1) {                            switch ($value1['source_sale_id']) {                                case 1:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 2:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 3:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                            }                        }                    }                    $count = count($L8);                    $Report[$level][$dayName] = $count;                    $total += $Report[$level][$dayName];                }                $Report[$level]['Lũy kế'] = $total;            }            $Report3 = $Report;        }        // <editor-fold defaultstate="collapsed" desc="THEO TUẦN VÀ THEO THÁNG">        else {            //loc            if (isset($get['filter_month_id']) && $get['filter_month_id'] != '') {                $start = $get['filter_month_id'];            } else {                $start = date('d-m-Y');            }            $a = explode('-', $start);            $num_of_days = date("t", mktime(0, 0, 0, $a[1], 1, $a[2]));            $lastday = date("t", mktime(0, 0, 0, $a[1], 1, $a[2]));            $no_of_weeks = 0;            $count_weeks = 0;            while ($no_of_weeks < $lastday) {                $no_of_weeks += 7;                $count_weeks++;            }            $weekArr = array();            $day_start_week = 0;            $day_end_week = 0;            for ($i = 0; $i < $count_weeks; $i++) {                if ($i != $count_weeks - 1) {                    $day_start_week += 1;                    $day_end_week = $day_start_week + 6;                    $weekArr[$i] = array('month_id' => $a[1] . '-' . $a[2],                        'week_id' => $i + 1,                        'start_date' => $day_start_week . '-' . $a[1] . '-' . $a[2],                        'end_date' => $day_end_week . '-' . $a[1] . '-' . $a[2],                        'num_day' => $day_end_week - $day_start_week                    );                    $day_start_week = $day_end_week;                } else {                    $day_start_week += 1;                    $day_end_week = $lastday;                    $weekArr[$i] = array('month_id' => $a[1] . '-' . $a[2],                        'week_id' => $i + 1,                        'start_date' => $day_start_week . '-' . $a[1] . '-' . $a[2],                        'end_date' => $lastday . '-' . $a[1] . '-' . $a[2],                        'num_day' => $lastday - $day_start_week                    );                }            }            $weekMax = 0;            $weekFullName = [];            foreach ($weekArr as $value) {                $weekFullName[$value['week_id']] = "Tuần " . $value['week_id'] . " (" . str_replace('-', '/', $value['start_date']) . " - " . str_replace('-', '/', $value['end_date']) . ')';                $weekMax++;            }            //loc            $dateArray = [];            $Report = array();            $doanhthu = array();            foreach ($typeReport as $level => $typeDate) {                $total = 0;                $total1 = 0;                foreach ($weekArr as $week) {                    $revenue = 0;                    $count = 0;                    $input = array();                    $input['select'] = 'id,price_purchase, source_sale_id, course_code';                    if ($level == 'Đã lọc trùng(L1)') {                        $input['where'] = array(                            '(`ordering_status_id` = 1 OR `ordering_status_id` = ' . _CHAM_SOC_SAU_MOT_THOI_GIAN_ .                            ' OR `ordering_status_id` = ' . _TU_CHOI_MUA_ . ''                            . ' OR `ordering_status_id` = ' . _DONG_Y_MUA_ . ')' => 'NO-VALUE');                    }                    if ($level == 'L1.1') {                        $input['where']['ordering_status_id'] = _SAI_SO_;                    }//                    if()                    $input['where'][$typeDate . '>='] = strtotime($week['start_date']);                    $input['where'][$typeDate . '<='] = strtotime($week['end_date']) + 24 * 3600 - 1;                    $input['where']['is_hide'] = '0';                    if (isset($get['filter_course_code']) && $get['filter_course_code'] != '') {                        $input['where_in'] = array('course_code' => $get['filter_course_code']);                    } else {                        $input['where_in'] = array('course_code' => $list_course_code_only);                    }                    $input = array_merge_recursive($input, $query['input_get']); // Nếu có lọc khách thì thêm vào điều kiện query                    // $weekName = 'Tuần ' . $week['week_id'];                    $weekName = $weekFullName[$week['week_id']];                    $L8 = $this->contacts_model->load_all($input);                    if ($cod == 1) {                        foreach ($L8 as $value1) {                            switch ($value1['source_sale_id']) {                                case 1:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 2:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 3:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                            }                        }                    } else {                        foreach ($L8 as $value1) {                            switch ($value1['source_sale_id']) {                                case 1:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 2:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                                case 3:                                    $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100)*$teacher_course[$value1['course_code']]['percent'];                                    break;                            }                        }                    }                    $count = count($L8);                    $result = array($count, $revenue);                    $Report[$level][$weekName]['Thực đạt'] = $result;                    $total += $Report[$level][$weekName]['Thực đạt'][0];                    $total1 += $Report[$level][$weekName]['Thực đạt'][1];                }                $Report[$level]['Tháng']['Thực đạt'] = array($total, $total1);//                if (!isset($get['filter_month_id'])) {//                    foreach ($dateArray as $dayName => $date) {//                        $revenue = 0;//                        $count = 0;//                        $input = array();//                        $input['select'] = 'id';//                        if ($level == 'Đã lọc trùng(L1)') {//                            $input['where'] = array(//                                '(`ordering_status_id` = 1 OR `ordering_status_id` = ' . _CHAM_SOC_SAU_MOT_THOI_GIAN_ .//                                ' OR `ordering_status_id` = ' . _TU_CHOI_MUA_ . ''//                                . ' OR `ordering_status_id` = ' . _DONG_Y_MUA_ . ')' => 'NO-VALUE');//                        }//                        if ($level == 'L1.1') {//                            $input['where']['ordering_status_id'] = _SAI_SO_;//                        }//                        $input['where'][$typeDate . '>='] = $date;//                        $input['where'][$typeDate . '<='] = $date + 24 * 3600 - 1;//                        $input['where']['is_hide'] = '0';//                        if (isset($get['filter_course_code']) && $get['filter_course_code'] != '') {//                            $input['where_in'] = array('course_code' => $get['filter_course_code']);//                        } else {//                            $input['where_in'] = array('course_code' => $teacher_course);//                        }//                        $input = array_merge_recursive($input, $query['input_get']);//                        $L8 = $this->contacts_model->load_all($input);//                        if ($cod == 1) {//                            foreach ($L8 as $value1) {//                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat / 100 - $value1['cod_fee']) * $profit / 100);//                            }//                        } else {//                            foreach ($L8 as $value1) {//                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat / 100) * $profit / 100);//                            }//                        }//                        $count = count($L8);//////                        $Report[$level][$dayName] = $count;//                        $Report['Doanh thu'][$dayName] = $revenue;//                    }//                }            }            $Report2 = array();            foreach ($Report as $key => $value) {                $Report2[$key]['Tháng'] = $value['Tháng'];                foreach ($value as $key2 => $value2) {                    if ($key2 == 'Tháng') {                        continue;                    }                    $Report2[$key][$key2] = $value2;                }            }            foreach ($Report2['Đã thu cod (L7)'] as $d_key => $d_value) {                $a = $d_value['Thực đạt'][0] + $Report2['Đã thu Lakita (L8)'][$d_key]['Thực đạt'][0];                $b = $d_value['Thực đạt'][1] + $Report2['Đã thu Lakita (L8)'][$d_key]['Thực đạt'][1];                $Report2['Doanh thu'][$d_key]['Thực đạt'] = array($a, $b);            }            $Report = $Report2;        }//        //        echo '<pre>';//        print_r($Report);//        die;        // </editor-fold>//echo '<pre>';//print_r($Report);die;        $data['Report'] = $Report;        $data['startDate'] = isset($startDate) ? $startDate : '0';        $data['endDate'] = isset($endDate) ? $endDate : '0';        //  $data['left_col'] = array('month_id_teacher', 'date_happen');        $data['left_col'] = array('month_id_teacher');        $data['right_col'] = array('course_code');        $data['content'] = 'teacher/view_report';        $this->load->view(_MAIN_LAYOUT_, $data);    }    function top_revenue() {        $this->load->helper('manager_helper');        $get = $this->input->get();        $data = $this->get_data_top_revenue();        $teacher_id = $this->session->userdata['user_id'];        $teacher_infor = $this->_get_all_require_data($teacher_id, '');        $vat = explode(";", $teacher_infor['staffs'][0]['vat']);        $cod = $teacher_infor['staffs'][0]['cod'];        $profit = explode(";", $teacher_infor['staffs'][0]['profit']);$teacher_course = $this->get_teacher_combo_and_course($teacher_id);        if (!count($get)) {            $startDate = strtotime(date('01-m-Y'));            $endDate = mktime(0, 0, 0, date('m') + 1, 0, date('Y'));        } else {            if (isset($get['filter_date_happen_from']) && $get['filter_date_happen_from'] != '' && isset($get['filter_date_happen_end']) && $get['filter_date_happen_end'] != '') {                $startDate = strtotime($get['filter_date_happen_from']);                $endDate = strtotime($get['filter_date_happen_end']);            } else if (isset($get['filter_month_id']) && $get['filter_month_id'] != '') {                $startDate = strtotime('1-' . date('m-Y', strtotime($get['filter_month_id'])));                $endDate = mktime(0, 0, 0, date('m', strtotime($get['filter_month_id'])) + 1, 0, date('Y', strtotime($get['filter_month_id'])));            } else {                $startDate = strtotime(date('01-m-Y'));                $endDate = mktime(0, 0, 0, date('m') + 1, 0, date('Y'));            }        }        foreach ($teacher_course as $key => $value) {            $revenue = 0;            $input = array();            $input['select'] = 'price_purchase,source_sale_id';            $input['where'] = array('course_code' => $value['course_code'],                'cod_status_id' => _DA_THU_COD_,                'date_receive_cod >=' => $startDate,                'date_receive_cod <' => $endDate);            $L7 = $this->contacts_model->load_all($input);            $input = array();            $input['select'] = 'price_purchase,source_sale_id,course_code';            $input['where'] = array('course_code' => $value['course_code'],                'cod_status_id' => _DA_THU_LAKITA_,                'date_receive_lakita >=' => $startDate,                'date_receive_lakita <' => $endDate);            $L8 = $this->contacts_model->load_all($input);            $L7L8 = array_merge($L7, $L8);            if ($cod == 1) {                foreach ($L7L8 as $value1) {                    switch ($value1['source_sale_id']) {                        case 1:                            $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100)*$teacher_course[$value1['course_code']]['percent'];                            break;                        case 2:                            $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100)*$teacher_course[$value1['course_code']]['percent'];                            break;                        case 3:                            $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100)*$teacher_course[$value1['course_code']]['percent'];                            break;                    }                }            } else {                foreach ($L7L8 as $value1) {                    switch ($value1['source_sale_id']) {                        case 1:                            $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100)*$teacher_course[$value1['course_code']]['percent'];                            break;                        case 2:                            $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100)*$teacher_course[$value1['course_code']]['percent'];                            break;                        case 3:                            $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100)*$teacher_course[$value1['course_code']]['percent'];                            break;                    }                }            }            $data['course_revenue'][$value['course_code']] = $revenue;        }        $data['left_col'] = array('month_id_teacher', 'date_happen');        //  $data['right_col'] = array('date_confirm');        $data['startDate'] = $startDate;        $data['endDate'] = $endDate;        $data['title_content'] = 'Danh sách đăng ký';        $data['content'] = 'teacher/top_revenue';        $this->load->view(_MAIN_LAYOUT_, $data);    }    function array_sort($array, $on, $order = SORT_ASC) {        $new_array = array();        $sortable_array = array();        if (count($array) > 0) {            foreach ($array as $k => $v) {                if (is_array($v)) {                    foreach ($v as $k2 => $v2) {                        if ($k2 == $on) {                            $sortable_array[$k] = $v2;                        }                    }                } else {                    $sortable_array[$k] = $v;                }            }            switch ($order) {                case SORT_ASC:                    asort($sortable_array);                    break;                case SORT_DESC:                    arsort($sortable_array);                    break;            }            foreach ($sortable_array as $k => $v) {                $new_array[$k] = $array[$k];            }        }        return $new_array;    }    private function get_data_top_revenue() {        $require_model = array(            'staffs' => array(                'where' => array(                    'role_id' => 7,                    'active' => 1                )            )        );        return array_merge($this->data, $this->_get_require_data($require_model));    }    public function ViewReport($offset = 0) {        $get = $this->input->get();//        $this->load->model('call_status_model');//        $this->load->model('ordering_status_model');//        $this->load->model('cod_status_model');//        $this->load->model('providers_model');//        $this->load->model('payment_method_rgt_model');        $conditional['select'] = 'course_code,  price_purchase, date_receive_lakita';        if ((isset($get['filter_date_date_rgt']) && $get['filter_date_date_rgt'] == '')) {            $conditional['where'] = array('date_rgt >=' => strtotime(date('Y-m-01 00:00:00')), 'cod_status_id' => 3, 'is_hide' => '0');        } else {            $conditional['where'] = array('cod_status_id' => 3, 'is_hide' => '0');        }        $data_pagination = $this->_query_all_from_get($get, $conditional, 10000, $offset);        $contacts = $data_pagination['data'];        $rs = [];        foreach ($contacts as $key => $value) {            $rs[$key]['STT'] = $key + 1;            $rs[$key]['Mã khóa học'] = $value['course_code'];            //$rs[$key]['Ngày nhận tiền'] = date('Y-m-d', $value['date_receive_lakita']);            $rs[$key]['Giá mua khóa học'] = ($value['price_purchase']);        }        echo json_encode($rs);        die;    }        function view_all_teacher_report() {        $this->load->helper('manager_helper');        $this->load->model('staffs_model');        $get = $this->input->get();        /* Mảng chứa các level cần lấy, và ngày phát sinh tương ứng */        $typeReport = array(            'L7' => 'date_receive_cod',            'L8' => 'date_receive_lakita',        );        /* Mảng chứa các ngày lẻ */        if (isset($get['filter_date_happen_from']) && $get['filter_date_happen_from'] != '' && isset($get['filter_date_happen_end']) && $get['filter_date_happen_end'] != '') {            $startDate = strtotime($get['filter_date_happen_from']);            $endDate = strtotime($get['filter_date_happen_end']);        } else {            $startDate = strtotime(date('1-m-Y'));            $endDate = strtotime(date('d-m-Y'));        }        $input = array();        $input['select'] = 'id';        $input['where']['role_id'] = 8;        $input['where']['active'] = 1;        $list_teacher = $this->staffs_model->load_all($input);        $total = 0;        foreach ($list_teacher as $t_value) {            $teacher_id = $t_value['id'];            $teacher_infor = $this->_get_all_require_data($teacher_id, '');            $vat = explode(";", $teacher_infor['staffs'][0]['vat']);            $cod = $teacher_infor['staffs'][0]['cod'];            $profit = explode(";", $teacher_infor['staffs'][0]['profit']);            $teacher_course = explode(';', $teacher_infor['staffs'][0]['course']);            $data = $this->_get_all_require_data('', $teacher_course);            $Report = array();            foreach ($typeReport as $level => $typeDate) {                $revenue = 0;                $input = array();                $input['select'] = 'id, price_purchase, source_sale_id';                $input['where'][$typeDate . '>='] = $startDate;                $input['where'][$typeDate . '<='] = $endDate + 24 * 3600 - 1;                $input['where']['is_hide'] = '0';                if ($level == 'L7') {                    $input['where']['cod_status_id'] = 2;                }                if ($level == 'L8') {                    $input['where']['cod_status_id'] = 3;                }                $input['where_in'] = array('course_code' => $teacher_course);                $L8 = $this->contacts_model->load_all($input);                if ($cod == 1) {                    foreach ($L8 as $value1) {                        switch ($value1['source_sale_id']) {                            case 1:                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100);                                break;                            case 2:                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100);                                break;                            case 3:                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * 12 / 100 - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100);                                break;                        }                    }                } else {                    foreach ($L8 as $value1) {                        switch ($value1['source_sale_id']) {                            case 1:                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[0] / 100) * $profit[0] / 100);                                break;                            case 2:                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[1] / 100) * $profit[1] / 100);                                break;                            case 3:                                $revenue += round(($value1['price_purchase'] - $value1['price_purchase'] * $vat[2] / 100) * $profit[2] / 100);                                break;                        }                    }                }                $Report[$level] = $revenue;            }            $total += $Report['L7'] + $Report['L8'];            $Report3[$teacher_infor['staffs'][0]['name']] = $Report['L7'] + $Report['L8'];        }                $Report3['Tổng'] = $total;        $data = $this->_get_all_require_data('', $teacher_course);        $data['Report'] = $Report3;        $data['startDate'] = date('d-m-Y',isset($startDate) ? $startDate : '0');        $data['endDate'] = date('d-m-Y',isset($endDate) ? $endDate : '0');        $data['left_col'] = array('date_happen');        $data['right_col'] = array();        $data['content'] = 'teacher/view_report_all_teacher';        $this->load->view(_MAIN_LAYOUT_, $data);    }        function get_teacher_combo_and_course($teacher_id = 80 ){        $this->load->model('staffs_model');        $this->load->model('courses_model');        $input = array();        $input['select'] = 'course';        $input['where']['id'] = $teacher_id;        $course = $this->staffs_model->load_all($input);        $course = $course[0]['course'];        $course = explode(';', $course);        $list_course = array();        foreach ($course as $value){            $list_course[$value] =  1 ;            $input = array();            $input['select'] = 'course_code,combo_course';            $input['where']['is_combo'] = '1';            $input['like']['combo_course'] = $value;            $combo_course = $this->courses_model->load_all($input);            if(!empty($combo_course)){                foreach ($combo_course as $value1){                $list = explode(',', $value1['combo_course']);                $count = $count_course_in_combo = count($list);                foreach ($list as $value){                    $input = array();                    $input['where']['id'] = $teacher_id;                    $input['like']['course'] = $value;                    if(empty($this->staffs_model->load_all($input))){                        $count_course_in_combo = $count_course_in_combo - 1;                    }                }                $list_course[$value1['course_code']] = $count_course_in_combo/$count ;                }            }        }        $result = array();        foreach ($list_course as $key => $value){            $result[$key] = array('course_code'=> $key,'percent' => $value);        }        return ($result);    }        }